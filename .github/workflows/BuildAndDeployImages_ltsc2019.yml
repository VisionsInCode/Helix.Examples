# This is a basic workflow to help you get started with Actions

name: Build and deploy images - ltsc2019

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events
  push:
    branches: [ feature/add-github-action ]
  pull_request:
    branches: [ feature/add-github-action ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  build-images:
      runs-on: windows-2019
     
      env:
        REGISTRY : ghcr.io/visionsincode/
        VERSION : dev
        OS_VERSION : ltsc2019
        COMPOSE_PROJECT_NAME : basic-company-aspnetcore
        SITEETCORE_BUILD_IMAGE : mcr.microsoft.com/dotnet/core/sdk:3.1
        SOLUTION_BUILD_IMAGE : mcr.microsoft.com/dotnet/framework/sdk:4.8
        SOLUTION_BASE_IMAGE : mcr.microsoft.com/windows/nanoserver:1809
        BUILD_CONFIGURATION : debug

        LOCAL_DEPLOY_PATH : .\docker\deploy
        LOCAL_DATA_PATH : .\docker\data
        HOST_LICENSE_FOLDER : C:\License

        SITECORE_DOCKER_REGISTRY : scr.sitecore.com/sxp/
        SITECORE_MODULE_REGISTRY : scr.sitecore.com/sxp/modules/
        SITECORE_TOOLS_REGISTRY : scr.sitecore.com/tools/
        SITECORE_VERSION : 10.1-ltsc2019
        HEADLESS_SERVICES_VERSION : 16.0.0-1809
        MANAGEMENT_SERVICES_VERSION : 3.0.0-1809
        TOOLS_VERSION : 10.1-1809
     
      steps:
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin  
      # Check out the repo    
      - name: Checkout
        uses: actions/checkout@v2
      # Build the images    
      - name: Build the docker-compose stack  
        run: docker-compose -f examples/helix-basic-aspnetcore/docker-compose.yml -f examples/helix-basic-aspnetcore/docker-compose.override.yml build
      # List images that will be pushed
      - name: List images
        run: docker images ${REGISTRY}
      # Push images
      - name: Push images
        run: docker-compose push --ignore-push-failures  
